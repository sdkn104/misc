from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateChatCompletionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metadata=None):  # noqa: E501
        """UpdateChatCompletionRequest - a model defined in OpenAPI

        :param metadata: The metadata of this UpdateChatCompletionRequest.  # noqa: E501
        :type metadata: Dict[str, str]
        """
        self.openapi_types = {
            'metadata': Dict[str, str]
        }

        self.attribute_map = {
            'metadata': 'metadata'
        }

        self._metadata = metadata

    @classmethod
    def from_dict(cls, dikt) -> 'UpdateChatCompletionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The updateChatCompletion_request of this UpdateChatCompletionRequest.  # noqa: E501
        :rtype: UpdateChatCompletionRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metadata(self) -> Dict[str, str]:
        """Gets the metadata of this UpdateChatCompletionRequest.

        Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard.   Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters.   # noqa: E501

        :return: The metadata of this UpdateChatCompletionRequest.
        :rtype: Dict[str, str]
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata: Dict[str, str]):
        """Sets the metadata of this UpdateChatCompletionRequest.

        Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard.   Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters.   # noqa: E501

        :param metadata: The metadata of this UpdateChatCompletionRequest.
        :type metadata: Dict[str, str]
        """
        if metadata is None:
            raise ValueError("Invalid value for `metadata`, must not be `None`")  # noqa: E501

        self._metadata = metadata
