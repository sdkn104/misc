from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class CompletionUsageCompletionTokensDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0):  # noqa: E501
        """CompletionUsageCompletionTokensDetails - a model defined in OpenAPI

        :param accepted_prediction_tokens: The accepted_prediction_tokens of this CompletionUsageCompletionTokensDetails.  # noqa: E501
        :type accepted_prediction_tokens: int
        :param audio_tokens: The audio_tokens of this CompletionUsageCompletionTokensDetails.  # noqa: E501
        :type audio_tokens: int
        :param reasoning_tokens: The reasoning_tokens of this CompletionUsageCompletionTokensDetails.  # noqa: E501
        :type reasoning_tokens: int
        :param rejected_prediction_tokens: The rejected_prediction_tokens of this CompletionUsageCompletionTokensDetails.  # noqa: E501
        :type rejected_prediction_tokens: int
        """
        self.openapi_types = {
            'accepted_prediction_tokens': int,
            'audio_tokens': int,
            'reasoning_tokens': int,
            'rejected_prediction_tokens': int
        }

        self.attribute_map = {
            'accepted_prediction_tokens': 'accepted_prediction_tokens',
            'audio_tokens': 'audio_tokens',
            'reasoning_tokens': 'reasoning_tokens',
            'rejected_prediction_tokens': 'rejected_prediction_tokens'
        }

        self._accepted_prediction_tokens = accepted_prediction_tokens
        self._audio_tokens = audio_tokens
        self._reasoning_tokens = reasoning_tokens
        self._rejected_prediction_tokens = rejected_prediction_tokens

    @classmethod
    def from_dict(cls, dikt) -> 'CompletionUsageCompletionTokensDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CompletionUsage_completion_tokens_details of this CompletionUsageCompletionTokensDetails.  # noqa: E501
        :rtype: CompletionUsageCompletionTokensDetails
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accepted_prediction_tokens(self) -> int:
        """Gets the accepted_prediction_tokens of this CompletionUsageCompletionTokensDetails.

        When using Predicted Outputs, the number of tokens in the prediction that appeared in the completion.   # noqa: E501

        :return: The accepted_prediction_tokens of this CompletionUsageCompletionTokensDetails.
        :rtype: int
        """
        return self._accepted_prediction_tokens

    @accepted_prediction_tokens.setter
    def accepted_prediction_tokens(self, accepted_prediction_tokens: int):
        """Sets the accepted_prediction_tokens of this CompletionUsageCompletionTokensDetails.

        When using Predicted Outputs, the number of tokens in the prediction that appeared in the completion.   # noqa: E501

        :param accepted_prediction_tokens: The accepted_prediction_tokens of this CompletionUsageCompletionTokensDetails.
        :type accepted_prediction_tokens: int
        """

        self._accepted_prediction_tokens = accepted_prediction_tokens

    @property
    def audio_tokens(self) -> int:
        """Gets the audio_tokens of this CompletionUsageCompletionTokensDetails.

        Audio input tokens generated by the model.  # noqa: E501

        :return: The audio_tokens of this CompletionUsageCompletionTokensDetails.
        :rtype: int
        """
        return self._audio_tokens

    @audio_tokens.setter
    def audio_tokens(self, audio_tokens: int):
        """Sets the audio_tokens of this CompletionUsageCompletionTokensDetails.

        Audio input tokens generated by the model.  # noqa: E501

        :param audio_tokens: The audio_tokens of this CompletionUsageCompletionTokensDetails.
        :type audio_tokens: int
        """

        self._audio_tokens = audio_tokens

    @property
    def reasoning_tokens(self) -> int:
        """Gets the reasoning_tokens of this CompletionUsageCompletionTokensDetails.

        Tokens generated by the model for reasoning.  # noqa: E501

        :return: The reasoning_tokens of this CompletionUsageCompletionTokensDetails.
        :rtype: int
        """
        return self._reasoning_tokens

    @reasoning_tokens.setter
    def reasoning_tokens(self, reasoning_tokens: int):
        """Sets the reasoning_tokens of this CompletionUsageCompletionTokensDetails.

        Tokens generated by the model for reasoning.  # noqa: E501

        :param reasoning_tokens: The reasoning_tokens of this CompletionUsageCompletionTokensDetails.
        :type reasoning_tokens: int
        """

        self._reasoning_tokens = reasoning_tokens

    @property
    def rejected_prediction_tokens(self) -> int:
        """Gets the rejected_prediction_tokens of this CompletionUsageCompletionTokensDetails.

        When using Predicted Outputs, the number of tokens in the prediction that did not appear in the completion. However, like reasoning tokens, these tokens are still counted in the total completion tokens for purposes of billing, output, and context window limits.   # noqa: E501

        :return: The rejected_prediction_tokens of this CompletionUsageCompletionTokensDetails.
        :rtype: int
        """
        return self._rejected_prediction_tokens

    @rejected_prediction_tokens.setter
    def rejected_prediction_tokens(self, rejected_prediction_tokens: int):
        """Sets the rejected_prediction_tokens of this CompletionUsageCompletionTokensDetails.

        When using Predicted Outputs, the number of tokens in the prediction that did not appear in the completion. However, like reasoning tokens, these tokens are still counted in the total completion tokens for purposes of billing, output, and context window limits.   # noqa: E501

        :param rejected_prediction_tokens: The rejected_prediction_tokens of this CompletionUsageCompletionTokensDetails.
        :type rejected_prediction_tokens: int
        """

        self._rejected_prediction_tokens = rejected_prediction_tokens
